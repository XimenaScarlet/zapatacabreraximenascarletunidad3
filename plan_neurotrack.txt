NeuroTrack Project - Detailed Plan

Information Gathered:
- Web application named "NeuroTrack" for mental health.
- Built with PHP, HTML, CSS, JavaScript (no frameworks).
- User roles: paciente, terapeuta, admin.
- Security features: authentication by user type, single active session with session_token, password recovery with PHPMailer and Gmail SMTP, route protection.
- Frontend: modern CSS (Flexbox/Grid), JS validation, navbar/menu, optional Chart.js for emotional state graphs.
- File structure specified by user.

File-Level Plan:

1. /index.php
- Login page with form.
- PHP backend to authenticate user by type.
- Redirect to respective dashboard.
- Limit login attempts by IP.
- Use password_verify() for password check.
- Generate session_token and store in DB.
- session_regenerate_id() on login.

2. /registro.php (optional)
- Patient registration form.
- Validate inputs.
- Store hashed password with password_hash().
- Possibly admin approval.

3. /dashboard_paciente.php
- Patient panel.
- Form to register daily emotional state and comments.
- View history as list and graph (Chart.js).
- Validate session and role.
- Only show patient's own data.

4. /dashboard_terapeuta.php
- Therapist panel.
- View assigned patients' records.
- Add observations/recommendations per entry.
- Validate session and role.

5. /admin.php
- Admin panel.
- Manage patient and therapist accounts.
- Activate/deactivate users.
- Assign patients to therapists.
- Validate session and role.

6. /logout.php
- Destroy session and redirect to login.

7. /recuperar.php
- Form to input email for password recovery.
- Generate token, store in DB with expiry.
- Send email with PHPMailer via Gmail SMTP.

8. /resetear.php
- Form to input new password using token from email.
- Validate token and expiry.
- Update password with password_hash().

9. /includes/conexion.php
- Database connection setup.

10. /includes/proteger.php
- Route protection script.
- Check session, session_token validity.
- Check user role for route access.
- Redirect unauthorized access.

11. /css/estilo.css
- Modern CSS styles using Flexbox/Grid.

12. /js/main.js
- Form validation (empty fields, email format).
- Navbar/menu toggle.
- Chart.js integration for patient emotional history.

Dependencies:
- PHPMailer library for email sending.
- MySQL or similar DB for user and data storage.
- Gmail SMTP credentials for sending recovery emails.

Follow-up Steps:
- Install PHPMailer via composer or manual.
- Configure Gmail SMTP settings.
- Test login, session management, and route protection.
- Test password recovery flow.
- Test role-based access control.
- Test frontend validation and charts.

Please confirm if you approve this plan or want any modifications before I start creating the files.
